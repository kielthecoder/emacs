#+TITLE: Emacs Config
#+AUTHOR: Kiel Lofstrand
#+TOC: true

This is my Emacs configuration.  I'm using [[https://pages.sachachua.com/.emacs.d/Sacha.html][Sacha Chua's Emacs configuration]] as a reference since it seems to be the best!

* Start Up

Which packages am I always going to require?

#+BEGIN_SRC emacs-lisp
  (require 'package)
  (require 'cl)
  (require 'org)
#+END_SRC

List the package repositories I use.

#+BEGIN_SRC emacs-lisp
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
  (when (< emacs-major-version 24)
    (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
  (package-initialize)
#+END_SRC

Fetch the list of available packages.

#+BEGIN_SRC emacs-lisp
  (unless package-archive-contents
    (package-refresh-contents))
#+END_SRC

Define the packages I'm currently using.

#+BEGIN_SRC emacs-lisp
  (defvar my-packages '(slime))
#+END_SRC

Install missing packages automatically.

#+BEGIN_SRC emacs-lisp
  (dolist (pkg my-packages)
    (unless (package-installed-p pkg)
      (package-install pkg)))
#+END_SRC

* Personal Information

#+BEGIN_SRC emacs-lisp
  (setq user-full-name "Kiel Lofstrand")
  (setq user-mail-address "kiel.lofstrand@gmail.com")
#+END_SRC

* Backups

Move backup files to a dedicated directory where they're easier to find:

#+BEGIN_SRC emacs-lisp
  (setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
  (setq backup-by-copying t)
  (setq version-control t)
  (setq delete-old-versions t)
#+END_SRC

* GUI

If you ever miss the splash screen, hit C-h C-a to see it again.

#+BEGIN_SRC emacs-lisp
  (setq inhibit-splash-screen t)
#+END_SRC

Get rid of the toolbar, it takes up too much space.

#+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
#+END_SRC

Keep the menu bar, it's handy sometimes.

#+BEGIN_SRC emacs-lisp
  (menu-bar-mode 1)
#+END_SRC

* Handy Helpers

Create a function to transpose windows (useful for swapping top/bottom or left/right).  This was copied from [[https://www.emacswiki.org/emacs/TransposeWindows][EmacsWiki]].

#+BEGIN_SRC emacs-lisp
  (defun transpose-windows ()
    "Transpose two windows.  If more or less than 2 windows are visible, error."
    (interactive)
    (unless (= 2 (count-windows))
      (error "There are not 2 windows."))
    (let* ((windows (window-list))
           (w1 (cl-first windows))
           (w2 (cl-second windows))
           (w1b (window-buffer w1))
           (w2b (window-buffer w2)))
      (set-window-buffer w1 w2b)
      (set-window-buffer w2 w1b)))
#+END_SRC

** Key Bindings

Give our nifty functions some useful key bindings.

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x x") 'transpose-windows)
#+END_SRC

* Org-mode

Add some global key bindings for Org commands.

#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-c l") 'org-store-link)
  (global-set-key (kbd "C-c a") 'org-agenda)
  (global-set-key (kbd "C-c c") 'org-capture)
#+END_SRC

Some export backends are not loaded by default.

#+BEGIN_SRC emacs-lisp
  (require 'ox-md)
#+END_SRC

Make sure we log times for when items were marked DONE.

#+BEGIN_SRC emacs-lisp
  (setq org-log-done 'time)
#+END_SRC

* SLiME

Configure our lisp interpretter.  If we're running on Windows, assume SBCL is somewhere in our PATH.

#+BEGIN_SRC emacs-lisp
  (if (string-equal system-type "windows-nt")
    (setq inferior-lisp-program "sbcl")
    (setq inferior-lisp-program "/usr/bin/sbcl"))
#+END_SRC

Which SLiME features are we using?

#+BEGIN_SRC emacs-lisp
  (setq slime-contribs '(slime-fancy))
#+END_SRC

* Theme

#+BEGIN_SRC emacs-lisp
  (custom-set-variables
   '(custom-enabled-themes (quote (tango-dark))))
#+END_SRC
